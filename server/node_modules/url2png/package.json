{
  "name": "url2png",
  "version": "6.0.1",
  "description": "node.js API for the URL2PNG online service",
  "main": "index.js",
  "dependencies": {
    "request": "~2.16"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/url2png.git"
  },
  "keywords": [
    "url2png",
    "url",
    "png",
    "websnapr",
    "shrinktheweb",
    "thumbalizr",
    "webthumb",
    "browsershots",
    "cutycapt"
  ],
  "author": {
    "name": "Forbes Lindesay"
  },
  "contributors": [
    {
      "name": "Pato Jutard",
      "email": "pato@mural.ly"
    },
    {
      "name": "Johnny Halife",
      "email": "johnny@mural.ly"
    }
  ],
  "license": "BSD",
  "readme": "<img src=\"https://api.url2png.com/v6/P502E17508FBBD/d7317fb8001a6c188b026ee0d84d5c63/png/?url=https%3A%2F%2Fgithub.com%2FForbesLindesay%2Furl2png\" width=\"250px\" align=\"right\" />\r\nurl2png\r\n=======\r\n\r\nnode.js library for url2png\r\n\r\nGet your account at [http://url2png.com/](http://url2png.com/)\r\n\r\n## Installation\r\n\r\n\r\n```\r\n$ npm install url2png\r\n```\r\n\r\n\r\nUsage\r\n-----\r\n```javascript\r\nvar url2png = require('url2png')('API_KEY', 'PRIVATE_KEY');\r\n\r\nvar screenshotUrl = url2png.buildURL(url, options);\r\n\r\nvar screenshotStream = url2png.readURL(url, options);\r\n```\r\n\r\n## Params\r\n\r\n### Url\r\n\r\n  The target url as a string.\r\n\r\n### Options\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th style=\"width: 100px;\">Name</th>\r\n      <th style=\"width: 50px;\">type</th>\r\n      <th style=\"width: 50px;\">default</th>\r\n      <th>description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>viewport</td>\r\n      <td>string</td>\r\n      <td>1280x1024</td>\r\n      <td>The viewport for the browser. Max is 4000x4000</td>\r\n    </tr>\r\n    <tr>\r\n      <td>fullpage</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>Capture the entire page, even what is outside of the viewport.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>thumbnail_max_width</td>\r\n      <td>pixels</td>\r\n      <td>-</td>\r\n      <td>Maximum width of image returned. If not specified image return will be 1:1.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>delay</td>\r\n      <td>seconds</td>\r\n      <td>-</td>\r\n      <td><b>EXTRA</b> delay in seconds to handle flash animation.<br><i>You probably don't need this!<br>We work hard to detect the right time to take the screenshot.</i></td>\r\n    </tr>\r\n    <tr>\r\n      <td>force</td>\r\n      <td>boolean</td>\r\n      <td>false</td>\r\n      <td>Shall we use the cached version if it already exists?</td>\r\n    </tr>\r\n    <tr>\r\n      <td>protocol</td>\r\n      <td>string</td>\r\n      <td>-</td>\r\n      <td>The protocol to use, can be 'https' or 'http' (blank to use protocol relative urls).</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n## Samples\r\n```javascript\r\nvar url2png = require('url2png')('API_KEY', 'PRIVATE_KEY');\r\n\r\nvar options = {\r\n  viewport : '900x600',\r\n  thumbnail_max_width : 400,\r\n  protocol: 'http'\r\n}\r\n\r\n//Get the URL\r\nvar url = url2png.buildURL('google.com' options);\r\n\r\n//...or download the image to a file\r\nvar fs = require('fs');\r\nurl2png.readURL('google.com' options).pipe(fs.createWriteStream('google.png'));\r\n\r\n//...or send the image in the http response\r\nvar http = require('http');\r\nhttp.createServer(function (req, res) {\r\n  if (req.url === '/google.png') {\r\n    url2png.readURL('google.com' options).pipe(res)\r\n  }\r\n});\r\n\r\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ForbesLindesay/url2png/issues"
  },
  "_id": "url2png@6.0.1",
  "dist": {
    "shasum": "2f56a45ff2b7e2fb40ffd0229f2a7d6f73d86628"
  },
  "_from": "url2png@",
  "_resolved": "https://registry.npmjs.org/url2png/-/url2png-6.0.1.tgz"
}
